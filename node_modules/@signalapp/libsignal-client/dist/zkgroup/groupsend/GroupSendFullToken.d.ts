/// <reference types="node" />
import ByteArray from '../internal/ByteArray';
import { ServiceId } from '../../Address';
import GroupSendDerivedKeyPair from './GroupSendDerivedKeyPair';
/**
 * A token representing a particular {@link GroupSendEndorsement}, along with the endorsement's
 * expiration.
 *
 * Generated by {@link GroupSendToken#toFullToken}, and verified by the chat server.
 */
export default class GroupSendFullToken extends ByteArray {
    constructor(contents: Buffer);
    /** Gets the expiration embedded in the token. */
    getExpiration(): Date;
    /**
     * Verifies that this token was generated from an endorsement of `userIds` by `keyPair`.
     *
     * The correct `keyPair` must be selected based on {@link #getExpiration}.
     *
     * @throws {VerificationFailedError} if the token is invalid.
     */
    verify(userIds: ServiceId[], keyPair: GroupSendDerivedKeyPair, now?: Date): void;
}
