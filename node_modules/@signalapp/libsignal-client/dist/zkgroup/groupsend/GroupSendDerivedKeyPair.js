"use strict";
//
// Copyright 2024 Signal Messenger, LLC.
// SPDX-License-Identifier: AGPL-3.0-only
//
Object.defineProperty(exports, "__esModule", { value: true });
const ByteArray_1 = require("../internal/ByteArray");
const Native = require("../../../Native");
/**
 * The key pair used to issue and verify group send endorsements.
 *
 * Group send endorsements use a different key pair depending on the endorsement's expiration (but
 * not the user ID being endorsed). The server may cache these keys to avoid the (small) cost of
 * deriving them from the root key in {@link ServerSecretParams}. The key object stores the
 * expiration so that it doesn't need to be provided again when issuing endorsements.
 *
 * @see {@link GroupSendEndorsementsResponse.issue}
 * @see {@link GroupSendFullToken#verify}
 */
class GroupSendDerivedKeyPair extends ByteArray_1.default {
    constructor(contents) {
        super(contents, Native.GroupSendDerivedKeyPair_CheckValidContents);
    }
    /**
     * Derives a new key for group send endorsements that expire at `expiration`.
     *
     * `expiration` must be day-aligned as a protection against fingerprinting by the issuing server.
     */
    static forExpiration(expiration, params) {
        return new GroupSendDerivedKeyPair(Native.GroupSendDerivedKeyPair_ForExpiration(Math.floor(expiration.getTime() / 1000), params));
    }
}
exports.default = GroupSendDerivedKeyPair;
//# sourceMappingURL=GroupSendDerivedKeyPair.js.map