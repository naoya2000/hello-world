"use strict";
//
// Copyright 2020-2021 Signal Messenger, LLC.
// SPDX-License-Identifier: AGPL-3.0-only
//
Object.defineProperty(exports, "__esModule", { value: true });
const ByteArray_1 = require("../internal/ByteArray");
const Native = require("../../../Native");
class UuidCiphertext extends ByteArray_1.default {
    constructor(contents) {
        super(contents, Native.UuidCiphertext_CheckValidContents);
    }
    static serializeAndConcatenate(ciphertexts) {
        if (ciphertexts.length == 0) {
            return Buffer.of();
        }
        const uuidCiphertextLen = ciphertexts[0].contents.length;
        const concatenated = Buffer.alloc(ciphertexts.length * uuidCiphertextLen);
        let offset = 0;
        for (const next of ciphertexts) {
            if (next.contents.length !== uuidCiphertextLen) {
                throw TypeError('UuidCiphertext with unexpected length');
            }
            concatenated.set(next.contents, offset);
            offset += uuidCiphertextLen;
        }
        return concatenated;
    }
}
exports.default = UuidCiphertext;
//# sourceMappingURL=UuidCiphertext.js.map