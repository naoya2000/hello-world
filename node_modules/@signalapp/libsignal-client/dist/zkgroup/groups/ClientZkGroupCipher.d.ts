/// <reference types="node" />
import UuidCiphertext from './UuidCiphertext';
import ProfileKeyCiphertext from './ProfileKeyCiphertext';
import ProfileKey from '../profiles/ProfileKey';
import GroupSecretParams from './GroupSecretParams';
import { Aci, ServiceId } from '../../Address';
export default class ClientZkGroupCipher {
    groupSecretParams: GroupSecretParams;
    constructor(groupSecretParams: GroupSecretParams);
    encryptServiceId(serviceId: ServiceId): UuidCiphertext;
    decryptServiceId(ciphertext: UuidCiphertext): ServiceId;
    encryptProfileKey(profileKey: ProfileKey, userId: Aci): ProfileKeyCiphertext;
    decryptProfileKey(profileKeyCiphertext: ProfileKeyCiphertext, userId: Aci): ProfileKey;
    encryptBlob(plaintext: Buffer): Buffer;
    encryptBlobWithRandom(random: Buffer, plaintext: Buffer): Buffer;
    decryptBlob(blobCiphertext: Buffer): Buffer;
}
