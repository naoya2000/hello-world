"use strict";
//
// Copyright 2023 Signal Messenger, LLC.
// SPDX-License-Identifier: AGPL-3.0-only
//
Object.defineProperty(exports, "__esModule", { value: true });
const crypto_1 = require("crypto");
const Native = require("../../../Native");
const ByteArray_1 = require("../internal/ByteArray");
const Constants_1 = require("../internal/Constants");
const BackupAuthCredentialPresentation_1 = require("./BackupAuthCredentialPresentation");
const BackupLevel_1 = require("./BackupLevel");
class BackupAuthCredential extends ByteArray_1.default {
    constructor(contents) {
        super(contents, Native.BackupAuthCredential_CheckValidContents);
    }
    present(serverParams) {
        const random = (0, crypto_1.randomBytes)(Constants_1.RANDOM_LENGTH);
        return this.presentWithRandom(serverParams, random);
    }
    presentWithRandom(serverParams, random) {
        return new BackupAuthCredentialPresentation_1.default(Native.BackupAuthCredential_PresentDeterministic(this.contents, serverParams.contents, random));
    }
    getBackupId() {
        return Native.BackupAuthCredential_GetBackupId(this.contents);
    }
    getBackupLevel() {
        const n = Native.BackupAuthCredential_GetBackupLevel(this.contents);
        if (!(n in BackupLevel_1.default)) {
            throw new TypeError(`Invalid BackupLevel ${n}`);
        }
        return n;
    }
}
exports.default = BackupAuthCredential;
//# sourceMappingURL=BackupAuthCredential.js.map