{"ast":null,"code":"import express from'express';import{createServer}from'node:http';import{fileURLToPath}from'node:url';import{dirname,join}from'node:path';import{Server}from'socket.io';import sqlite3 from'sqlite3';import{open}from'sqlite';async function main(){// open the database file\nconst db=await open({filename:'chat.db',driver:sqlite3.Database});// create our 'messages' table (you can ignore the 'client_offset' column for now)\nawait db.exec(\"\\n    CREATE TABLE IF NOT EXISTS messages (\\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\\n        client_offset TEXT UNIQUE,\\n        content TEXT\\n    );\\n  \");const app=express();const server=createServer(app);const io=new Server(server,{connectionStateRecovery:{}});const __dirname=dirname(fileURLToPath(import.meta.url));app.get('/',(req,res)=>{res.sendFile(join(__dirname,'chat_interface.html'));});io.on('connection',socket=>{socket.on('chat message',async msg=>{let result;try{// store the message in the database\nresult=await db.run('INSERT INTO messages (content) VALUES (?)',msg);}catch(e){// TODO handle the failure\nreturn;}// include the offset with the message\nio.emit('chat message',msg,result.lastID);});});server.listen(3000,()=>{console.log('server running at http://localhost:3000');});}main();","map":{"version":3,"names":["express","createServer","fileURLToPath","dirname","join","Server","sqlite3","open","main","db","filename","driver","Database","exec","app","server","io","connectionStateRecovery","__dirname","import","meta","url","get","req","res","sendFile","on","socket","msg","result","run","e","emit","lastID","listen","console","log"],"sources":["/Users/naoyaokamoto/Documents/GitHub/hello-world/src/index.js"],"sourcesContent":["import express from 'express';\nimport { createServer } from 'node:http';\nimport { fileURLToPath } from 'node:url';\nimport { dirname, join } from 'node:path';\nimport { Server } from 'socket.io';\nimport sqlite3 from 'sqlite3';\nimport { open } from 'sqlite';\n\nasync function main() {\n  // open the database file\n  const db = await open({\n    filename: 'chat.db',\n    driver: sqlite3.Database\n  });\n\n  // create our 'messages' table (you can ignore the 'client_offset' column for now)\n  await db.exec(`\n    CREATE TABLE IF NOT EXISTS messages (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        client_offset TEXT UNIQUE,\n        content TEXT\n    );\n  `);\n\nconst app = express();\nconst server = createServer(app);\nconst io = new Server(server, {\n  connectionStateRecovery: {}\n});\n\nconst __dirname = dirname(fileURLToPath(import.meta.url));\n\napp.get('/', (req, res) => {\n    res.sendFile(join(__dirname, 'chat_interface.html'));\n});\n\nio.on('connection', (socket) => {\n  socket.on('chat message', async (msg) => {\n    let result;\n      try {\n        // store the message in the database\n        result = await db.run('INSERT INTO messages (content) VALUES (?)', msg);\n      } catch (e) {\n        // TODO handle the failure\n        return;\n      }\n      // include the offset with the message\n      io.emit('chat message', msg, result.lastID);\n  });\n});\n\nserver.listen(3000, () => {\n    console.log('server running at http://localhost:3000');\n});\n\n}\n\nmain();"],"mappings":"AAAA,MAAO,CAAAA,OAAO,KAAM,SAAS,CAC7B,OAASC,YAAY,KAAQ,WAAW,CACxC,OAASC,aAAa,KAAQ,UAAU,CACxC,OAASC,OAAO,CAAEC,IAAI,KAAQ,WAAW,CACzC,OAASC,MAAM,KAAQ,WAAW,CAClC,MAAO,CAAAC,OAAO,KAAM,SAAS,CAC7B,OAASC,IAAI,KAAQ,QAAQ,CAE7B,cAAe,CAAAC,IAAIA,CAAA,CAAG,CACpB;AACA,KAAM,CAAAC,EAAE,CAAG,KAAM,CAAAF,IAAI,CAAC,CACpBG,QAAQ,CAAE,SAAS,CACnBC,MAAM,CAAEL,OAAO,CAACM,QAClB,CAAC,CAAC,CAEF;AACA,KAAM,CAAAH,EAAE,CAACI,IAAI,mKAMZ,CAAC,CAEJ,KAAM,CAAAC,GAAG,CAAGd,OAAO,CAAC,CAAC,CACrB,KAAM,CAAAe,MAAM,CAAGd,YAAY,CAACa,GAAG,CAAC,CAChC,KAAM,CAAAE,EAAE,CAAG,GAAI,CAAAX,MAAM,CAACU,MAAM,CAAE,CAC5BE,uBAAuB,CAAE,CAAC,CAC5B,CAAC,CAAC,CAEF,KAAM,CAAAC,SAAS,CAAGf,OAAO,CAACD,aAAa,CAACiB,MAAM,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,CAEzDP,GAAG,CAACQ,GAAG,CAAC,GAAG,CAAE,CAACC,GAAG,CAAEC,GAAG,GAAK,CACvBA,GAAG,CAACC,QAAQ,CAACrB,IAAI,CAACc,SAAS,CAAE,qBAAqB,CAAC,CAAC,CACxD,CAAC,CAAC,CAEFF,EAAE,CAACU,EAAE,CAAC,YAAY,CAAGC,MAAM,EAAK,CAC9BA,MAAM,CAACD,EAAE,CAAC,cAAc,CAAE,KAAO,CAAAE,GAAG,EAAK,CACvC,GAAI,CAAAC,MAAM,CACR,GAAI,CACF;AACAA,MAAM,CAAG,KAAM,CAAApB,EAAE,CAACqB,GAAG,CAAC,2CAA2C,CAAEF,GAAG,CAAC,CACzE,CAAE,MAAOG,CAAC,CAAE,CACV;AACA,OACF,CACA;AACAf,EAAE,CAACgB,IAAI,CAAC,cAAc,CAAEJ,GAAG,CAAEC,MAAM,CAACI,MAAM,CAAC,CAC/C,CAAC,CAAC,CACJ,CAAC,CAAC,CAEFlB,MAAM,CAACmB,MAAM,CAAC,IAAI,CAAE,IAAM,CACtBC,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC,CAC1D,CAAC,CAAC,CAEF,CAEA5B,IAAI,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}